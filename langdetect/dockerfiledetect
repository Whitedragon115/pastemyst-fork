# Build stage for guesslang-autodetect with TensorFlow support
FROM golang:1.20-bullseye AS build

# Install TensorFlow C API
RUN apt-get update && \
    apt-get install -y curl && \
    TENSORFLOW_VERSION=2.11.0 && \
    curl -o /tmp/tensorflow.tar.gz \
    "https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-linux-x86_64-${TENSORFLOW_VERSION}.tar.gz" && \
    tar -xzf /tmp/tensorflow.tar.gz -C /usr/local && \
    ldconfig /usr/local/lib && \
    rm /tmp/tensorflow.tar.gz

# Copy guesslang-go source code from the current project
COPY guesslang-go /src/guesslang-go

WORKDIR /src/guesslang-go

# Build guesslang-autodetect
RUN go mod download && \
    go build -o /usr/bin/guesslang-autodetect ./cmd/guesslang-autodetect

# Main application stage
FROM dlang2/dmd-ubuntu:2.096.1

# Copy the built guesslang-autodetect binary
COPY --from=build /usr/bin/guesslang-autodetect /usr/bin/

# Copy TensorFlow libraries from build stage
COPY --from=build /usr/local/lib/libtensorflow* /usr/local/lib/
COPY --from=build /usr/local/include/tensorflow /usr/local/include/tensorflow

# Install required packages and update library cache
RUN apt-get update && \
    apt-get install -y libssl-dev libscrypt-dev patch git && \
    ldconfig /usr/local/lib && \
    apt-get clean autoclean && \
    apt-get autoremove --yes && \
    rm -rf /var/lib/{apt,dpkg,cache,log}/

WORKDIR /app

# Configure git for safe directory
RUN git config --global --add safe.directory /app

# Test guesslang-autodetect installation
RUN echo "def test(): pass" > /tmp/test.py && \
    guesslang-autodetect /tmp/test.py && \
    rm /tmp/test.py

ENTRYPOINT dub run
